package facebook

// Generated by https://quicktype.io

type GetAdvertsRequest struct {
	BuyLocation                  BuyLocation      `json:"buyLocation"`
	CategoryIDArray              []int64          `json:"categoryIDArray"`
	ContextualData               []ContextualData `json:"contextual_data"`
	Count                        int64            `json:"count"`
	Cursor                       string           `json:"cursor"`
	MarketplaceBrowseContext     string           `json:"marketplaceBrowseContext"`
	NumericVerticalFields        []interface{}    `json:"numericVerticalFields"`
	NumericVerticalFieldsBetween []interface{}    `json:"numericVerticalFieldsBetween"`
	PriceRange                   []int64          `json:"priceRange"`
	Radius                       int64            `json:"radius"`
	Scale                        int64            `json:"scale"`
	StringVerticalFields         []ContextualData `json:"stringVerticalFields"`
	TopicPageParams              TopicPageParams  `json:"topicPageParams"`
}

type BuyLocation struct {
	Latitude  float64 `json:"latitude"`
	Longitude float64 `json:"longitude"`
}

type ContextualData struct {
	Name  string `json:"name"`
	Value string `json:"value"`
}

type TopicPageParams struct {
	LocationID string `json:"location_id"`
	URL        string `json:"url"`
}

type GetAdvertsResponse struct {
	Data       Data       `json:"data"`
	Extensions Extensions `json:"extensions"`
}

type Data struct {
	Viewer             Viewer             `json:"viewer"`
	MarketplaceSEOPage MarketplaceSEOPage `json:"marketplace_seo_page"`
}

type MarketplaceSEOPage struct {
	Typename      string          `json:"__typename"`
	SEONavigation []SEONavigation `json:"seo_navigation"`
	ID            string          `json:"id"`
}

type SEONavigation struct {
	Typename              string          `json:"__typename"`
	SEOURL                string          `json:"seo_url"`
	SEOPageIsGeoAgnostic  bool            `json:"seo_page_is_geo_agnostic"`
	SEOLocalizedPageTitle string          `json:"seo_localized_page_title"`
	VirtualCategory       VirtualCategory `json:"virtual_category"`
	ID                    string          `json:"id"`
}

type VirtualCategory struct {
	Name                        string `json:"name"`
	VirtualTaxonomyPublishState string `json:"virtual_taxonomy_publish_state"`
	ID                          string `json:"id"`
}

type Viewer struct {
	MarketplaceFeedStories      MarketplaceFeedStories       `json:"marketplace_feed_stories"`
	BuyLocation                 ViewerBuyLocation            `json:"buy_location"`
	MarketplaceSettings         MarketplaceSettings          `json:"marketplace_settings"`
	MarketplaceSavedSearches    MarketplaceSavedSearches     `json:"marketplace_saved_searches"`
	MarketplaceStructuredFields []MarketplaceStructuredField `json:"marketplace_structured_fields"`
}

type MarketplaceStructuredField struct {
	Typename                     string      `json:"__typename"`
	FilterType                   string      `json:"filter_type"`
	FilterKey                    string      `json:"filter_key"`
	ShouldRenderAsSubFilter      bool        `json:"should_render_as_sub_filter"`
	IsMarketplaceStructuredField string      `json:"__isMarketplaceStructuredField"`
	DisplayName                  string      `json:"display_name"`
	Choices                      []Choice    `json:"choices"`
	FieldKey                     string      `json:"field_key"`
	ChildFilters                 []string    `json:"child_filters"`
	ClearFields                  interface{} `json:"clear_fields"`
	Range                        *Range      `json:"range"`
}

type Choice struct {
	DisplayName           string               `json:"display_name"`
	Value                 string               `json:"value"`
	Active                *bool                `json:"active"`
	SEONavigableFilters   *SEONavigableFilters `json:"seo_navigable_filters"`
	Slug                  *string              `json:"slug"`
	VirtualAttributeValue interface{}          `json:"virtual_attribute_value"`
	ContextualFilters     interface{}          `json:"contextual_filters"`
}

type Range struct {
	FilterKeyMax string `json:"filter_key_max"`
	FilterKeyMin string `json:"filter_key_min"`
}

type SEONavigableFilters string

const (
	Empty     SEONavigableFilters = "{}"
	MakeModel SEONavigableFilters = "{\"make\":\"*\",\"model\":\"*\"}"
)

type ViewerBuyLocation struct {
	BuyLocation BuyLocationBuyLocation `json:"buy_location"`
}

type BuyLocationBuyLocation struct {
	Location BuyLocationLocation `json:"location"`
	ID       string              `json:"id"`
}

type BuyLocationLocation struct {
	ReverseGeocode PurpleReverseGeocode `json:"reverse_geocode"`
}

type PurpleReverseGeocode struct {
	City string `json:"city"`
}

type MarketplaceFeedStories struct {
	Edges    []Edge   `json:"edges"`
	PageInfo PageInfo `json:"page_info"`
}

type Edge struct {
	Node   Node   `json:"node"`
	Cursor string `json:"cursor"`
}

type Node struct {
	Typename  string  `json:"__typename"`
	StoryType string  `json:"story_type"`
	StoryKey  string  `json:"story_key"`
	Tracking  string  `json:"tracking"`
	Listing   Listing `json:"listing"`
	ID        string  `json:"id"`
}

type Listing struct {
	Typename                          string                             `json:"__typename"`
	ID                                string                             `json:"id"`
	PrimaryListingPhoto               PrimaryListingPhoto                `json:"primary_listing_photo"`
	IsMarketplaceListingRenderable    string                             `json:"__isMarketplaceListingRenderable"`
	ListingPrice                      ListingPrice                       `json:"listing_price"`
	StrikethroughPrice                interface{}                        `json:"strikethrough_price"`
	Location                          ListingLocation                    `json:"location"`
	IsHidden                          bool                               `json:"is_hidden"`
	IsLive                            bool                               `json:"is_live"`
	IsPending                         bool                               `json:"is_pending"`
	IsSold                            bool                               `json:"is_sold"`
	IsViewerSeller                    bool                               `json:"is_viewer_seller"`
	MinListingPrice                   interface{}                        `json:"min_listing_price"`
	MaxListingPrice                   interface{}                        `json:"max_listing_price"`
	MarketplaceListingCategoryID      string                             `json:"marketplace_listing_category_id"`
	MarketplaceListingTitle           string                             `json:"marketplace_listing_title"`
	CustomTitle                       string                             `json:"custom_title"`
	CustomSubTitlesWithRenderingFlags []CustomSubTitlesWithRenderingFlag `json:"custom_sub_titles_with_rendering_flags"`
	OriginGroup                       interface{}                        `json:"origin_group"`
	PreRecordedVideos                 []interface{}                      `json:"pre_recorded_videos"`
	MarketplaceListingSeller          MarketplaceListingSeller           `json:"marketplace_listing_seller"`
}

type CustomSubTitlesWithRenderingFlag struct {
	Subtitle string `json:"subtitle"`
}

type ListingPrice struct {
	FormattedAmount string `json:"formatted_amount"`
}

type ListingLocation struct {
	ReverseGeocode FluffyReverseGeocode `json:"reverse_geocode"`
}

type FluffyReverseGeocode struct {
	City     string   `json:"city"`
	State    string   `json:"state"`
	CityPage CityPage `json:"city_page"`
}

type CityPage struct {
	DisplayName string `json:"display_name"`
	ID          string `json:"id"`
}

type MarketplaceListingSeller struct {
	Typename string `json:"__typename"`
	Name     string `json:"name"`
	ID       string `json:"id"`
}

type PrimaryListingPhoto struct {
	Typename string `json:"__typename"`
	Image    Image  `json:"image"`
	ID       string `json:"id"`
}

type Image struct {
	URI string `json:"uri"`
}

type PageInfo struct {
	EndCursor   string `json:"end_cursor"`
	HasNextPage bool   `json:"has_next_page"`
}

type MarketplaceSavedSearches struct {
	Edges []interface{} `json:"edges"`
}

type MarketplaceSettings struct {
	CurrentMarketplace CurrentMarketplace `json:"current_marketplace"`
}

type CurrentMarketplace struct {
	Typename     string `json:"__typename"`
	IsMetricBase bool   `json:"is_metric_base"`
	ID           string `json:"id"`
}

type Extensions struct {
	IsFinal bool `json:"is_final"`
}

type Cursor struct {
	Basic Basic `json:"basic"`
}

type Basic struct {
	ItemIndex int64 `json:"item_index"`
}

type GetAdvertsPaginationQueryParams struct {
	postcode  string
	radius    string
	brand     string
	model     string
	sortBy    string
	page      *uint
	ItemIndex int64
	Count     int64
}
